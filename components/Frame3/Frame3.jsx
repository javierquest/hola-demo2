/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import React from 'react';
import { Button, Avatar, Checkbox, FormControlLabel, Radio } from '@mui/material';
import { styled } from '@mui/material/styles';
import Frame4 from 'components/Frame4/Frame4';
import { animated, useSpring, easings } from 'react-spring';

 
const Frame31 = animated(styled("div")({  
  backgroundColor: `rgba(255, 255, 255, 1)`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  width: `1107px`,  
  height: `524px`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  overflow: `hidden`,  
}));
  
const Frame5 = animated(styled(Frame4)(({ theme }) =>({  
  width: `452px`,  
  height: `371px`,  
  position: `absolute`,  
  left: `57px`,  
  top: `94px`,  
})));
  
const ButtonContained = styled(Button)({  
  position: `absolute`,  
  left: `881px`,  
  top: `348px`,  
});
  
const Avatar1 = styled(Avatar)({  
  position: `absolute`,  
  left: `328px`,  
  top: `24px`,  
  width: `32px`,  
  height: `32px`,  
});
  
const FormControlLabel1 = styled(FormControlLabel)({  
  position: `absolute`,  
  left: `728px`,  
  top: `94px`,  
  margin: `0px`,  
});
  
const FormControlLabel2 = styled(FormControlLabel)({  
  position: `absolute`,  
  left: `332px`,  
  top: `103px`,  
  margin: `0px`,  
});
 
function Frame3(props) {
  
  const [Frame31Spring, Frame31Api] = useSpring(() => ({
    config: {
      duration: 1000,
      easing: easings['easeInOutQuint']
    },
    delay: 0,
    from: { ...({"transform":"translateX(0px) scale(1)","opacity":1}) },
  }));

  const [Frame5Spring, Frame5Api] = useSpring(() => ({
    config: {
      duration: 750,
      easing: easings['easeInOutExpo']
    },
    delay: 0,
    from: { ...({"transform":"translateX(0px)","opacity":1}) },
  }));

  return (
    <Frame31  className={props.className}    style={{ ...Frame31Spring }}>
      <Frame5   onClick={() => {  Frame5Api.start({ ...{"transform":"translateX(-100px)","opacity":0}, delay: 0 });  Frame31Api.start({ ...{"transform":"translateX(-150px) scale(1.4)","opacity":0}, delay: 0 });  }}  style={{ ...Frame5Spring }}/>
      <ButtonContained variant="contained" size="medium" color="success"    > Medium </ButtonContained>
      <Avatar1 variant="rounded" src={`assets/images/Frame3_Avatar.png`} alt={"Avatar"}   />
      <FormControlLabel1 control={<Checkbox defaultChecked={true} size="medium" color="primary" />} label={`Label`} />
      <FormControlLabel2  control={<Radio color="error" size="small" />} label={"Label"} />
    </Frame31>
  );
}

export default Frame3;
